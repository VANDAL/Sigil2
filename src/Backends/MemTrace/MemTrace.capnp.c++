// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: MemTrace.capnp

#include "MemTrace.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<40> b_e99acfd22115f001 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      1, 240,  21,  33, 210, 207, 154, 233,
     15,   0,   0,   0,   1,   0,   0,   0,
     37, 253, 249, 237,  52, 103, 180, 200,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 109,  84, 114,  97,  99, 101,
     46,  99,  97, 112, 110, 112,  58,  77,
    101, 109,  84, 114,  97,  99, 101,  83,
    116, 114, 101,  97, 109,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    195,  17,  18,  43, 126, 221,  70, 137,
      1,   0,   0,   0,  34,   0,   0,   0,
     77, 101, 109,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    195,  17,  18,  43, 126, 221,  70, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e99acfd22115f001 = b_e99acfd22115f001.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e99acfd22115f001[] = {
  &s_8946dd7e2b1211c3,
};
static const uint16_t m_e99acfd22115f001[] = {0};
static const uint16_t i_e99acfd22115f001[] = {0};
const ::capnp::_::RawSchema s_e99acfd22115f001 = {
  0xe99acfd22115f001, b_e99acfd22115f001.words, 40, d_e99acfd22115f001, m_e99acfd22115f001,
  1, 1, i_e99acfd22115f001, nullptr, nullptr, { &s_e99acfd22115f001, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_8946dd7e2b1211c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195,  17,  18,  43, 126, 221,  70, 137,
     30,   0,   0,   0,   1,   0,   2,   0,
      1, 240,  21,  33, 210, 207, 154, 233,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 109,  84, 114,  97,  99, 101,
     46,  99,  97, 112, 110, 112,  58,  77,
    101, 109,  84, 114,  97,  99, 101,  83,
    116, 114, 101,  97, 109,  46,  77, 101,
    109,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    254, 233,  25,  97, 180,  20, 216, 223,
      1,   0,   0,   0,  66,   0,   0,   0,
     77, 101, 109,  84, 121, 112, 101,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    254, 233,  25,  97, 180,  20, 216, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8946dd7e2b1211c3 = b_8946dd7e2b1211c3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8946dd7e2b1211c3[] = {
  &s_dfd814b46119e9fe,
};
static const uint16_t m_8946dd7e2b1211c3[] = {2, 1, 0};
static const uint16_t i_8946dd7e2b1211c3[] = {0, 1, 2};
const ::capnp::_::RawSchema s_8946dd7e2b1211c3 = {
  0x8946dd7e2b1211c3, b_8946dd7e2b1211c3.words, 67, d_8946dd7e2b1211c3, m_8946dd7e2b1211c3,
  1, 3, i_8946dd7e2b1211c3, nullptr, nullptr, { &s_8946dd7e2b1211c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_dfd814b46119e9fe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254, 233,  25,  97, 180,  20, 216, 223,
     34,   0,   0,   0,   2,   0,   0,   0,
    195,  17,  18,  43, 126, 221,  70, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 109,  84, 114,  97,  99, 101,
     46,  99,  97, 112, 110, 112,  58,  77,
    101, 109,  84, 114,  97,  99, 101,  83,
    116, 114, 101,  97, 109,  46,  77, 101,
    109,  46,  77, 101, 109,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
    114, 101,  97, 100,   0,   0,   0,   0,
    119, 114, 105, 116, 101,   0,   0,   0, }
};
::capnp::word const* const bp_dfd814b46119e9fe = b_dfd814b46119e9fe.words;
#if !CAPNP_LITE
static const uint16_t m_dfd814b46119e9fe[] = {0, 1, 2};
const ::capnp::_::RawSchema s_dfd814b46119e9fe = {
  0xdfd814b46119e9fe, b_dfd814b46119e9fe.words, 32, nullptr, m_dfd814b46119e9fe,
  0, 3, nullptr, nullptr, nullptr, { &s_dfd814b46119e9fe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(MemType_dfd814b46119e9fe, dfd814b46119e9fe);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// MemTraceStream
#ifndef _MSC_VER
constexpr uint16_t MemTraceStream::_capnpPrivate::dataWordSize;
constexpr uint16_t MemTraceStream::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MemTraceStream::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MemTraceStream::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MemTraceStream::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MemTraceStream::Mem
#ifndef _MSC_VER
constexpr uint16_t MemTraceStream::Mem::_capnpPrivate::dataWordSize;
constexpr uint16_t MemTraceStream::Mem::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MemTraceStream::Mem::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MemTraceStream::Mem::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MemTraceStream::Mem::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



